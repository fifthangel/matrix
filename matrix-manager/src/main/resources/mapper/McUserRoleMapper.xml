<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.matrix.dao.IMcUserRoleMapper">

	<!-- 基类字段映射 -->
	<resultMap id="BaseMap" type="com.matrix.base.BaseEntity"> 
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
		<result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="update_user_id" property="updateUserId" jdbcType="BIGINT" />
		<result column="update_user_name" property="updateUserName" jdbcType="VARCHAR" />
		<result column="delete_flag" property="deleteFlag" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap id="BaseResultMap" type="com.matrix.pojo.entity.McUserRole" extends="BaseMap">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="mc_user_id" property="mcUserId" jdbcType="BIGINT" />
		<result column="mc_role_id" property="mcRoleId" jdbcType="BIGINT" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
	</resultMap>
	
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
			* 
		from 
			managercenter.mc_user_role
		where 
			id = #{id,jdbcType=BIGINT}
		and
			delete_flag = 1
	</select>
	
	<select id="selectByMcRoleId" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
			* 
		from 
			managercenter.mc_user_role
		where 
			mc_role_id = #{mcRoleId , jdbcType=BIGINT}
		and
			delete_flag = 1
	</select>
	
	<select id="selectByMcUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
			* 
		from 
			managercenter.mc_user_role
		where 
			mc_user_id = #{mcUserId , jdbcType=BIGINT}
		and
			delete_flag = 1
	</select>
	
	<select id="findList" resultMap="BaseResultMap" parameterType="com.matrix.pojo.entity.McUserRole">
		select
			* 
		from 
			managercenter.mc_user_role
		where 
			delete_flag = 1 
	</select>
	
	
	<resultMap id="McUserRoleViewMap" type="com.matrix.pojo.view.McUserRoleView"></resultMap>
	<select id="userRoleFuncList" resultMap="McUserRoleViewMap" parameterType="com.matrix.pojo.dto.McUserRoleDto">
		select 
		  ur.id as id,
		  ur.mc_user_id as userId,
  		  ur.mc_role_id as roleId,
		  r.role_name as roleName,
		  r.role_desc as roleDesc,
		  ui.user_name as userName
		from
		  managercenter.`mc_user_role` ur left join managercenter.`mc_role` r on ur.mc_role_id = r.id left join managercenter.`mc_user_info` ui on ur.mc_user_id = ui.id
		where 
			r.delete_flag = 1
		and
			ur.delete_flag = 1
		order by ur.id desc
	</select>
	
	
	<delete id="deleteById" parameterType="java.lang.Long">
		delete from managercenter.mc_user_role where id = #{id,jdbcType=BIGINT}
	</delete>
	
	<!-- TODO 等待处理的废弃方法！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！可替换为 deleteByDto -->
	<!-- <delete id="deleteByCondition" parameterType="com.matrix.pojo.dto.McUserRoleDto"> -->
	<delete id="deleteByDto" parameterType="com.matrix.pojo.dto.McUserRoleDto">
		delete from 
			managercenter.mc_user_role 
		where 
			mc_user_id = #{userId , jdbcType=BIGINT} 
		and 
			mc_role_id = #{mcRoleId , jdbcType=BIGINT} 
	</delete>
	
	
	<delete id="deleteByUserId" parameterType="java.lang.Long">
		delete from 
			managercenter.mc_user_role 
		where 
			mc_user_id = #{userId , jdbcType=BIGINT} 
	</delete>
	
	<insert id="insertSelective" parameterType="com.matrix.pojo.entity.McUserRole">
		insert into managercenter.mc_user_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="mcUserId != null">
				mc_user_id,
			</if>
			<if test="mcRoleId != null">
				mc_role_id,
			</if>
			<if test="remark != null">
				remark,
			</if>
			
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createUserId != null">
				create_user_id,
			</if>
			<if test="createUserName != null">
				create_user_name,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="updateUserId != null">
				update_user_id,
			</if>
			<if test="updateUserName != null">
				update_user_name,
			</if>
			<if test="deleteFlag != null">
				delete_flag,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="mcUserId != null">
				#{mcUserId,jdbcType=BIGINT},
			</if>
			<if test="mcRoleId != null">
				#{mcRoleId,jdbcType=BIGINT},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			
			<if test="createTime != null">
				#{createTime , jdbcType=TIMESTAMP},
			</if>
			<if test="createUserId != null">
				#{createUserId , jdbcType=BIGINT},
			</if>
			<if test="createUserName != null">
				#{createUserName , jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime , jdbcType=TIMESTAMP},
			</if>
			<if test="updateUserId != null">
				#{updateUserId , jdbcType=BIGINT},
			</if>
			<if test="updateUserName != null">
				#{updateUserName , jdbcType=VARCHAR},
			</if>
			<if test="deleteFlag != null">
				#{deleteFlag , jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	
	
	<update id="updateSelective" parameterType="com.matrix.pojo.entity.McUserRole">
		update managercenter.mc_user_role
		<set>
			<if test="mcUserId != null">
				mc_user_id = #{mcUserId,jdbcType=BIGINT},
			</if>
			<if test="mcRoleId != null">
				mc_role_id = #{mcRoleId,jdbcType=BIGINT},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			
			<if test="updateTime != null">
				update_time = #{updateTime , jdbcType=TIMESTAMP},
			</if>
			<if test="updateUserId != null">
				update_user_id = #{updateUserId , jdbcType=BIGINT},
			</if>
			<if test="updateUserName != null">
				update_user_name = #{updateUserName , jdbcType=VARCHAR},
			</if>
			<if test="deleteFlag != null">
				delete_flag = #{deleteFlag , jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
</mapper>















































